- label: ":mechanical_arm: :ferris_wheel: ARM64 Linux wheels"
  conditions: ["RAY_CI_LINUX_WHEELS_AFFECTED"]
  instance_size: arm64-medium
  commands:
    # Build the wheels
    - UPLOAD_WHEELS_AS_ARTIFACTS=1 LINUX_WHEELS=1 ./ci/ci.sh build
    # Upload the wheels
    # We don't want to push on PRs, in fact, the copy_files will fail because unauthenticated.
    - if [ "$BUILDKITE_PULL_REQUEST" != "false" ]; then exit 0; fi
    - pip install -q docker aws_requests_auth boto3
    - ./ci/env/env_info.sh
    # Upload to branch directory.
    - python .buildkite/copy_files.py --destination branch_wheels --path ./.whl
    # Upload to latest directory.
    - if [ "$BUILDKITE_BRANCH" == "master" ]; then python .buildkite/copy_files.py --destination wheels --path ./.whl; fi

- label: ":mechanical_arm: :ferris_wheel: ARM64 Post-wheels tests"
  conditions: ["RAY_CI_LINUX_WHEELS_AFFECTED"]
  instance_size: arm64-medium
  commands:
    - LINUX_WHEELS=1 ./ci/ci.sh build
    - cleanup() { if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then ./ci/build/upload_build_info.sh; fi }; trap cleanup EXIT
    - ./ci/env/env_info.sh
    - bazel test --config=ci $(./ci/run/bazel_export_options)
      --test_tag_filters=post_wheel_build
      --test_env=CONDA_EXE
      --test_env=CONDA_PYTHON_EXE
      --test_env=CONDA_SHLVL
      --test_env=CONDA_PREFIX
      --test_env=CONDA_DEFAULT_ENV
      --test_env=CI
      --test_env=RAY_CI_POST_WHEEL_TESTS=True
      python/ray/tests/... python/ray/serve/... python/ray/tune/... rllib/... doc/...


# This currently takes ~3 hours and times out often.
# Enable this when ARM debug wheels are actually needed (and look into speeding this up).

#- label: ":mechanical_arm: :ferris_wheel: ARM64 Debug Wheels"
#  conditions:
#    [
#        "RAY_CI_LINUX_WHEELS_AFFECTED",
#    ]
#  instance_size: arm64-medium
#  commands:
#    # Build the debug wheels
#    - RAY_DEBUG_BUILD=debug LINUX_WHEELS=1 ./ci/ci.sh build
#    # Upload the wheels.
#    # We don't want to push on PRs, in fact, the copy_files will fail because unauthenticated.
#    - if [ "$BUILDKITE_PULL_REQUEST" != "false" ]; then exit 0; fi
#    - pip install -q docker aws_requests_auth boto3
#    - ./ci/env/env_info.sh
#    # Upload to branch directory.
#    - python .buildkite/copy_files.py --destination branch_wheels --path ./.whl
#    # Upload to latest directory.
#    - if [ "$BUILDKITE_BRANCH" == "master" ]; then python .buildkite/copy_files.py --destination wheels --path ./.whl; fi


- label: ":mechanical_arm: :docker: Build Images: py37 [aarch64] (1/2)"
  conditions: ["RAY_CI_LINUX_WHEELS_AFFECTED"]
  instance_size: arm64-medium
  commands:
    - LINUX_WHEELS=1 ./ci/ci.sh build
    - pip install -q docker aws_requests_auth boto3
    - ./ci/env/env_info.sh
    - if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then python .buildkite/copy_files.py --destination docker_login; fi
    - python ./ci/build/build-docker-images.py --py-versions py37 --device-types cpu cu112 --build-type BUILDKITE --build-base --suffix aarch64

- label: ":mechanical_arm: :docker: Build Images: py37 [aarch64] (2/2)"
  conditions: ["RAY_CI_LINUX_WHEELS_AFFECTED"]
  instance_size: arm64-medium
  commands:
    - LINUX_WHEELS=1 ./ci/ci.sh build
    - pip install -q docker aws_requests_auth boto3
    - ./ci/env/env_info.sh
    - if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then python .buildkite/copy_files.py --destination docker_login; fi
    - python ./ci/build/build-docker-images.py --py-versions py37 --device-types cu113 cu116 --build-type BUILDKITE --build-base --suffix aarch64

- label: ":mechanical_arm: :docker: Build Images: py38 [aarch64] (1/2)"
  conditions: ["RAY_CI_LINUX_WHEELS_AFFECTED"]
  instance_size: arm64-medium
  commands:
    - LINUX_WHEELS=1 ./ci/ci.sh build
    - pip install -q docker aws_requests_auth boto3
    - ./ci/env/env_info.sh
    - if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then python .buildkite/copy_files.py --destination docker_login; fi
    - python ./ci/build/build-docker-images.py --py-versions py38 --device-types cpu cu112 --build-type BUILDKITE --build-base --suffix aarch64

- label: ":mechanical_arm: :docker: Build Images: py38 [aarch64] (2/2)"
  conditions: ["RAY_CI_LINUX_WHEELS_AFFECTED"]
  instance_size: arm64-medium
  commands:
    - LINUX_WHEELS=1 ./ci/ci.sh build
    - pip install -q docker aws_requests_auth boto3
    - ./ci/env/env_info.sh
    - if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then python .buildkite/copy_files.py --destination docker_login; fi
    - python ./ci/build/build-docker-images.py --py-versions py38 --device-types cu113 cu116 --build-type BUILDKITE --build-base --suffix aarch64

- label: ":mechanical_arm: :docker: Build Images: py39 [aarch64] (1/2)"
  conditions: ["RAY_CI_LINUX_WHEELS_AFFECTED"]
  instance_size: arm64-medium
  commands:
    - LINUX_WHEELS=1 ./ci/ci.sh build
    - pip install -q docker aws_requests_auth boto3
    - ./ci/env/env_info.sh
    - if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then python .buildkite/copy_files.py --destination docker_login; fi
    - python ./ci/build/build-docker-images.py --py-versions py39 --device-types cpu cu112 --build-type BUILDKITE --build-base --suffix aarch64

- label: ":mechanical_arm: :docker: Build Images: py39 [aarch64] (2/2)"
  conditions: ["RAY_CI_LINUX_WHEELS_AFFECTED"]
  instance_size: arm64-medium
  commands:
    - LINUX_WHEELS=1 ./ci/ci.sh build
    - pip install -q docker aws_requests_auth boto3
    - ./ci/env/env_info.sh
    - if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then python .buildkite/copy_files.py --destination docker_login; fi
    - python ./ci/build/build-docker-images.py --py-versions py39 --device-types cu113 cu116 --build-type BUILDKITE --build-base --suffix aarch64

- label: ":mechanical_arm: :docker: Build Images: py310 [aarch64] (1/2)"
  conditions: ["RAY_CI_LINUX_WHEELS_AFFECTED"]
  instance_size: arm64-medium
  commands:
    - LINUX_WHEELS=1 ./ci/ci.sh build
    - pip install -q docker aws_requests_auth boto3
    - ./ci/env/env_info.sh
    - if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then python .buildkite/copy_files.py --destination docker_login; fi
    - python ./ci/build/build-docker-images.py --py-versions py310 --device-types cpu cu112 --build-type BUILDKITE --build-base --suffix aarch64

- label: ":mechanical_arm: :docker: Build Images: py310 [aarch64] (2/2)"
  conditions: ["RAY_CI_LINUX_WHEELS_AFFECTED"]
  instance_size: arm64-medium
  commands:
    - LINUX_WHEELS=1 ./ci/ci.sh build
    - pip install -q docker aws_requests_auth boto3
    - if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then python .buildkite/copy_files.py --destination docker_login; fi
    - python ./ci/build/build-docker-images.py --py-versions py310 --device-types cu113 cu116 --build-type BUILDKITE --build-base --suffix aarch64
