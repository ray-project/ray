#ci:group=:redis: External Redis tests

- label: ":redis: (External Redis) (Small & Client)"
  conditions: ["RAY_CI_PYTHON_AFFECTED"]
  instance_size: medium
  commands:
    - cleanup() { if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then ./ci/build/upload_build_info.sh; fi }; trap cleanup EXIT
    - DL=1 ./ci/env/install-dependencies.sh
    - ./ci/env/env_info.sh
    - pip install ray[client]
    - bazel test --config=ci $(./scripts/bazel_export_options)
      --test_tag_filters=client_tests,small_size_python_tests
      --test_env=TEST_EXTERNAL_REDIS=1
      -- python/ray/tests/...

- label: ":redis: (External Redis) (Large)"
  conditions: ["RAY_CI_PYTHON_AFFECTED"]
  instance_size: large
  parallelism: 3
  commands:
    - cleanup() { if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then ./ci/build/upload_build_info.sh; fi }; trap cleanup EXIT
    - DL=1 ./ci/env/install-dependencies.sh
    - ./ci/env/env_info.sh
    - ./ci/ci.sh test_large --test_env=TEST_EXTERNAL_REDIS=1

- label: ":redis: (External Redis) (Medium A-J)"
  conditions: ["RAY_CI_PYTHON_AFFECTED"]
  instance_size: medium
  commands:
    - cleanup() { if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then ./ci/build/upload_build_info.sh; fi }; trap cleanup EXIT
    - ./ci/env/env_info.sh
    - bazel test --config=ci $(./scripts/bazel_export_options)
      --test_tag_filters=-kubernetes,medium_size_python_tests_a_to_j
      --test_env=TEST_EXTERNAL_REDIS=1
      -- //python/ray/tests/...

- label: ":redis: (External Redis) (Medium K-Z)"
  conditions: ["RAY_CI_PYTHON_AFFECTED"]
  instance_size: medium
  commands:
    - cleanup() { if [ "${BUILDKITE_PULL_REQUEST}" = "false" ]; then ./ci/build/upload_build_info.sh; fi }; trap cleanup EXIT
    - DL=1 ./ci/env/install-dependencies.sh
    - ./ci/env/env_info.sh
    - bazel test --config=ci $(./scripts/bazel_export_options)
      --test_tag_filters=-kubernetes,medium_size_python_tests_k_to_z
      --test_env=TEST_EXTERNAL_REDIS=1
      -- //python/ray/tests/...

