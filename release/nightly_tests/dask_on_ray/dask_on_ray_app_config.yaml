base_image: {{ env["RAY_IMAGE_NIGHTLY_CPU"] }}
# We use retriable_lifo as the workload can crash due to multiple tasks from different
# callers running on the same node, we also observed raylet memory leak that would
# trigger the group-by-policy to fail the workload.
# https://github.com/ray-project/ray/issues/32195
env_vars: {"RAY_worker_killing_policy": "retriable_lifo"}
debian_packages: []

python:
  pip_packages: ["dask[complete]", tqdm, scipy, xarray, zarr, pyarrow, pytest]
  conda_packages: []

post_build_cmds:
  # - pip install fastparquet
  - pip3 install boto3 s3fs
  - pip3 install -U s3fs
  - pip3 uninstall -y ray && pip3 install -U {{ env["RAY_WHEELS"] | default("ray") }}
  - pip3 install -U ray[default]
  - echo {{env["DATESTAMP"]}}
  - {{ env["RAY_WHEELS_SANITY_CHECK"] | default("echo No Ray wheels sanity check") }}
