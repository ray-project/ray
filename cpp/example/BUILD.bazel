cc_binary(
    name = "example",
    srcs = glob([
        "*.cc",
    ]),
    args = [
        "--ray-dynamic-library-path $(location example.so)",
    ],
    data = [
        "example.so",
    ],
    linkstatic = True,
    deps = [
        ":ray_api",
    ],
)

cc_binary(
    name = "example.so",
    srcs = glob([
        "*.cc",
    ]),
    linkopts = ["-shared"],
    linkstatic = True,
    deps = [
        ":ray_api",
    ],
)

cc_library(
    name = "ray_api",
    srcs = [
        "thirdparty/lib/libray_api.so",
    ],
    hdrs = glob([
        "thirdparty/include/**/*.h",
        "thirdparty/include/**/*.hpp",
        "thirdparty/include/**/**/*.h",
        "thirdparty/include/**/**/*.hpp",
    ]),
    linkopts = ["-Wl,-rpath, ./"],
    strip_include_prefix = "thirdparty/include",
    visibility = ["//visibility:public"],
)

genrule(
    name = "cpp_example_pkg",
    outs = ["ray_cpp_pkg.out"],
    cmd = """
        WORK_DIR="$$(pwd)" &&
        PARENT_DIR=$$(dirname $$WORK_DIR) &&
        cp -f -r "$$PARENT_DIR/temp_dir/.bazelrc" "$$WORK_DIR/cpp/example/" &&
        cp -f -r "$$PARENT_DIR/temp_dir/thirdparty" "$$WORK_DIR/cpp/example/" &&
        echo "$$WORK_DIR" > $@
    """,
    local = 1,
    visibility = ["//visibility:public"],
)
