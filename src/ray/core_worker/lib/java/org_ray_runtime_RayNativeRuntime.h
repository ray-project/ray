/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_ray_runtime_RayNativeRuntime */

#ifndef _Included_org_ray_runtime_RayNativeRuntime
#define _Included_org_ray_runtime_RayNativeRuntime
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_ray_runtime_RayNativeRuntime
 * Method:    nativeInit
 * Signature:
 * (ILjava/lang/String;Ljava/lang/String;[BLorg/ray/runtime/gcs/GcsClientOptions;)J
 */
JNIEXPORT jlong JNICALL Java_org_ray_runtime_RayNativeRuntime_nativeInit(
    JNIEnv *, jclass, jint, jstring, jstring, jbyteArray, jobject);

/*
 * Class:     org_ray_runtime_RayNativeRuntime
 * Method:    nativeRun
 * Signature: (JLorg/ray/runtime/task/TaskExecutor;)V
 */
JNIEXPORT void JNICALL Java_org_ray_runtime_RayNativeRuntime_nativeRun(JNIEnv *, jclass,
                                                                       jlong, jobject);

/*
 * Class:     org_ray_runtime_RayNativeRuntime
 * Method:    nativeDestroy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ray_runtime_RayNativeRuntime_nativeDestroy(JNIEnv *,
                                                                           jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
