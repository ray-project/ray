// Copyright 2017 The Ray Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class io_ray_runtime_context_NativeWorkerContext */

#ifndef _Included_io_ray_runtime_context_NativeWorkerContext
#define _Included_io_ray_runtime_context_NativeWorkerContext
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     io_ray_runtime_context_NativeWorkerContext
 * Method:    nativeGetCurrentTaskType
 * Signature: ()I
 */
JNIEXPORT jint JNICALL
Java_io_ray_runtime_context_NativeWorkerContext_nativeGetCurrentTaskType(JNIEnv *,
                                                                         jclass);

/*
 * Class:     io_ray_runtime_context_NativeWorkerContext
 * Method:    nativeGetCurrentTaskId
 * Signature: ()Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL
Java_io_ray_runtime_context_NativeWorkerContext_nativeGetCurrentTaskId(JNIEnv *, jclass);

/*
 * Class:     io_ray_runtime_context_NativeWorkerContext
 * Method:    nativeGetCurrentJobId
 * Signature: ()Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL
Java_io_ray_runtime_context_NativeWorkerContext_nativeGetCurrentJobId(JNIEnv *, jclass);

/*
 * Class:     io_ray_runtime_context_NativeWorkerContext
 * Method:    nativeGetCurrentWorkerId
 * Signature: ()Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL
Java_io_ray_runtime_context_NativeWorkerContext_nativeGetCurrentWorkerId(JNIEnv *,
                                                                         jclass);

/*
 * Class:     io_ray_runtime_context_NativeWorkerContext
 * Method:    nativeGetCurrentActorId
 * Signature: ()Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL
Java_io_ray_runtime_context_NativeWorkerContext_nativeGetCurrentActorId(JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
