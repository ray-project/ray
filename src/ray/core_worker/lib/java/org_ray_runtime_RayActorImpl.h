/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_ray_runtime_RayActorImpl */

#ifndef _Included_org_ray_runtime_RayActorImpl
#define _Included_org_ray_runtime_RayActorImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_ray_runtime_RayActorImpl
 * Method:    fork
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_ray_runtime_RayActorImpl_fork(JNIEnv *, jclass, jlong);

/*
 * Class:     org_ray_runtime_RayActorImpl
 * Method:    getActorId
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ray_runtime_RayActorImpl_getActorId(JNIEnv *,
                                                                          jclass, jlong);

/*
 * Class:     org_ray_runtime_RayActorImpl
 * Method:    getRayActorImplId
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ray_runtime_RayActorImpl_getActorHandleId(JNIEnv *,
                                                                                jclass,
                                                                                jlong);

/*
 * Class:     org_ray_runtime_RayActorImpl
 * Method:    getLanguage
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_ray_runtime_RayActorImpl_getLanguage(JNIEnv *, jclass,
                                                                     jlong);

/*
 * Class:     org_ray_runtime_RayActorImpl
 * Method:    getActorDefinitionDescriptor
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL
Java_org_ray_runtime_RayActorImpl_getActorDefinitionDescriptor(JNIEnv *, jclass, jlong);

/*
 * Class:     org_ray_runtime_RayActorImpl
 * Method:    serialize
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ray_runtime_RayActorImpl_serialize(JNIEnv *, jclass,
                                                                         jlong);

/*
 * Class:     org_ray_runtime_RayActorImpl
 * Method:    deserialize
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_org_ray_runtime_RayActorImpl_deserialize(JNIEnv *, jclass,
                                                                      jbyteArray);

/*
 * Class:     org_ray_runtime_RayActorImpl
 * Method:    free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ray_runtime_RayActorImpl_free(JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
