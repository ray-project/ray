/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_ray_runtime_Worker */

#ifndef _Included_org_ray_runtime_Worker
#define _Included_org_ray_runtime_Worker
#ifdef __cplusplus
extern "C" {
#endif
#undef org_ray_runtime_Worker_NUM_ACTOR_CHECKPOINTS_TO_KEEP
#define org_ray_runtime_Worker_NUM_ACTOR_CHECKPOINTS_TO_KEEP 20L
/*
 * Class:     org_ray_runtime_Worker
 * Method:    nativeCreateCoreWorker
 * Signature: (ILjava/lang/String;Ljava/lang/String;[B)J
 */
JNIEXPORT jlong JNICALL Java_org_ray_runtime_Worker_nativeCreateCoreWorker(
    JNIEnv *, jclass, jint, jstring, jstring, jbyteArray);

/*
 * Class:     org_ray_runtime_Worker
 * Method:    nativeRunCoreWorker
 * Signature: (JLorg/ray/runtime/Worker;)V
 */
JNIEXPORT void JNICALL Java_org_ray_runtime_Worker_nativeRunCoreWorker(JNIEnv *, jclass,
                                                                       jlong, jobject);

/*
 * Class:     org_ray_runtime_Worker
 * Method:    nativeGetTaskReturnId
 * Signature: ([BJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_ray_runtime_Worker_nativeGetTaskReturnId(JNIEnv *,
                                                                               jclass,
                                                                               jbyteArray,
                                                                               jlong);

#ifdef __cplusplus
}
#endif
#endif
