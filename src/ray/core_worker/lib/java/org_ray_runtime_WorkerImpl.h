/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_ray_runtime_WorkerImpl */

#ifndef _Included_org_ray_runtime_WorkerImpl
#define _Included_org_ray_runtime_WorkerImpl
#ifdef __cplusplus
extern "C" {
#endif
#undef org_ray_runtime_WorkerImpl_NUM_ACTOR_CHECKPOINTS_TO_KEEP
#define org_ray_runtime_WorkerImpl_NUM_ACTOR_CHECKPOINTS_TO_KEEP 20L
/*
 * Class:     org_ray_runtime_WorkerImpl
 * Method:    nativeInit
 * Signature:
 * (ILjava/lang/String;Ljava/lang/String;[BLorg/ray/runtime/gcs/GcsClientOptions;)J
 */
JNIEXPORT jlong JNICALL Java_org_ray_runtime_WorkerImpl_nativeInit(JNIEnv *, jclass, jint,
                                                                   jstring, jstring,
                                                                   jbyteArray, jobject);

/*
 * Class:     org_ray_runtime_WorkerImpl
 * Method:    nativeRunCoreWorker
 * Signature: (JLorg/ray/runtime/WorkerImpl;)V
 */
JNIEXPORT void JNICALL Java_org_ray_runtime_WorkerImpl_nativeRunCoreWorker(JNIEnv *,
                                                                           jclass, jlong,
                                                                           jobject);

/*
 * Class:     org_ray_runtime_WorkerImpl
 * Method:    nativeDestroy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ray_runtime_WorkerImpl_nativeDestroy(JNIEnv *, jclass,
                                                                     jlong);

#ifdef __cplusplus
}
#endif
#endif
