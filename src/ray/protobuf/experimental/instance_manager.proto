// Copyright 2017 The Ray Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
option cc_enable_arenas = true;

package ray.rpc.autoscaler;
import "src/ray/protobuf/experimental/autoscaler.proto";

message GetAvailableInstanceTypesRequest {}

message GetAvailableInstanceTypesResponse {
  repeated InstanceType instance_types = 1;
  // number of instances that are available for starting.
  // this can change if the cloud provider has a limit on
  // number of instances that can be started.
  int64 available_instances = 2;
}

message UpdateInstanceManagerStateRequest {
  int64 expected_version = 1;
  repeated InstanceType new_nodes_to_start = 2;
  repeated string instance_ids_to_terminate = 3;
}

message UpdateInstanceManagerStateReply {
  bool success = 1;
  string error_message = 2;
  int64 version = 3;
}

message InstanceManagerState {
  // a monotonically increasing version number.
  // the version number is incremented whenever
  // the state is updated (either by successful adjusting request,
  // or instance state change).
  int64 version = 1;
  repeated Instance instances = 2;
}

message GetInstanceManagerStateRequest {}

message GetInstanceManagerStateReply {
  InstanceManagerState state = 1;
}

service InstanceManagerService {
  rpc GetInstanceManagerState(GetInstanceManagerStateRequest)
      returns (GetInstanceManagerStateReply);
  rpc UpdateInstanceManagerState(UpdateInstanceManagerStateRequest)
      returns (UpdateInstanceManagerStateReply);
  rpc GetAvailableInstanceTypes(GetAvailableInstanceTypesRequest)
      returns (GetAvailableInstanceTypesResponse);
}
