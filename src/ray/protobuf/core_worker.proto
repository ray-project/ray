syntax = "proto3";

package ray.rpc;

import "src/ray/protobuf/common.proto";

// Type of this worker.
enum WorkerType {
  WORKER = 0;
  DRIVER = 1;
}

// Run mode of this worker.
enum RunMode {
  // Ray is running in one single Java process, without Raylet backend, object store, and GCS.
  // It's useful for debug.
  SINGLE_PROCESS = 0;
  // Ray is running on one or more nodes, with multiple processes.
  CLUSTER = 1;
}

message ActorHandle {
  // ID of the actor.
  bytes actor_id = 1;

  // ID of this actor handle.
  bytes actor_handle_id = 2;

  // Language of the actor.
  Language actor_language = 3;

  // Function descriptor of actor creation task.
  repeated string actor_creation_task_function_descriptor = 4;

  // The unique id of the last return of the last task.
  // It's used as a dependency for the next task.
  bytes actor_cursor = 5;

  // The number of tasks that have been invoked on this actor.
  int64 task_counter = 6;

  // The number of times that this actor handle has been forked.
  // It's used to make sure ids of actor handles are unique.
  int64 num_forks = 7;
}
