// Copyright 2017 The Ray Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
option cc_enable_arenas = true;
package ray.rpc;

message GetRayVersionRequest {}

message GetRayVersionReply {
  string version = 1;
}

message DrainAndKillNodeRequest {
  // The node ids to drain.
  repeated bytes node_ids = 1;
}

message DrainAndKillNodeReply {
  // The node ids which are beginning to drain.
  repeated bytes drained_nodes = 2;
}

// This service provides a stable interface for a monitor/autoscaler process to interact
// with Ray.
service MonitorGcsService {
  // Get the ray version of the service.
  rpc GetRayVersion(GetRayVersionRequest) returns (GetRayVersionReply);
  // Request that GCS drain and kill a node. This call is idempotent, and could
  // need to be retried if the head node fails.
  rpc DrainAndKillNode(DrainAndKillNodeRequest) returns (DrainAndKillNodeReply);
}
