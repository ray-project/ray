load("//bazel:ray.bzl", "ray_cc_library")

ray_cc_library(
    name = "publisher_interface",
    hdrs = ["publisher_interface.h"],
    deps = [
        "//src/ray/protobuf:pubsub_cc_grpc",
        # NOTE(edoakes): we only seem to need `SendReplyCallback` from server_call.h.
        # We should move that definition to its own target.
        "//src/ray/rpc:server_call",
    ],
)

ray_cc_library(
    name = "publisher",
    srcs = ["publisher.cc"],
    hdrs = ["publisher.h"],
    deps = [
        "//src/ray/protobuf:pubsub_cc_grpc",
        # NOTE(edoakes): we only seem to need `SendReplyCallback` from server_call.h.
        # We should move that definition to its own target.
        "//src/ray/pubsub:publisher_interface",
        "//src/ray/rpc:server_call",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/synchronization",
    ],
)

ray_cc_library(
    name = "subscriber_interface",
    hdrs = ["subscriber_interface.h"],
    deps = [
        "//src/ray/protobuf:common_cc_proto",
        "//src/ray/protobuf:pubsub_cc_grpc",
        # NOTE(edoakes): we only seem to need `ClientCallback` from client_call.h.
        # We should move that definition to its own target.
        "//src/ray/rpc:client_call",
    ],
)

ray_cc_library(
    name = "subscriber",
    srcs = ["subscriber.cc"],
    hdrs = ["subscriber.h"],
    deps = [
        "//src/ray/protobuf:pubsub_cc_grpc",
        # NOTE(edoakes): we only seem to need `ClientCallback` from client_call.h.
        # We should move that definition to its own target.
        "//src/ray/rpc:client_call",
        "//src/ray/pubsub:subscriber_interface",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/synchronization",
    ],
)
