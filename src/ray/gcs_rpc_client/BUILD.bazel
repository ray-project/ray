load("//bazel:ray.bzl", "ray_cc_library")

ray_cc_library(
    name = "gcs_client",
    srcs = [
        "accessor.cc",
        "gcs_client.cc",
    ],
    hdrs = [
        "accessor.h",
        "gcs_client.h",
    ],
    deps = [
        ":rpc_client",
        "//src/ray/common:asio",
        "//src/ray/common:id",
        "//src/ray/common:placement_group",
        "//src/ray/common:protobuf_utils",
        "//src/ray/gcs/store_client:redis_store_client",
        "//src/ray/protobuf:usage_cc_proto",
        "//src/ray/pubsub:gcs_subscriber",
        "//src/ray/pubsub:subscriber",
        "//src/ray/util:container_util",
        "//src/ray/util:network_util",
        "//src/ray/util:sequencer",
    ],
)

ray_cc_library(
    name = "global_state_accessor_lib",
    srcs = ["global_state_accessor.cc"],
    hdrs = ["global_state_accessor.h"],
    deps = [
        ":gcs_client",
        "//src/ray/util:time",
    ],
)

ray_cc_library(
    name = "gcs_python_callbacks",
    hdrs = [
        "python_callbacks.h",
    ],
)

ray_cc_library(
    name = "rpc_client",
    hdrs = [
        "rpc_client.h",
    ],
    visibility = [
        ":__pkg__",
        "//src/ray/pubsub:__pkg__",
    ],
    deps = [
        "//src/ray/common:ray_config",
        "//src/ray/protobuf:autoscaler_cc_grpc",
        "//src/ray/protobuf:gcs_service_cc_grpc",
        "//src/ray/rpc:client_call",
        "//src/ray/rpc:retryable_grpc_client",
        "//src/ray/util:network_util",
        "@com_google_absl//absl/container:btree",
    ],
)
