Tune Guides and Tutorials
=========================


Tune takes a user-defined Python function or class and evaluates it on a set of hyperparameter configurations.

Each hyperparameter configuration evaluation is called a *trial*, and multiple trials are run in parallel. Configurations are either generated by Tune or drawn from a user-specified **search algorithm**. The trials are scheduled and managed by a **trial scheduler**.

.. image:: /images/tune-api.svg

More information about Tune's `search algorithms can be found here <tune-searchalg.html>`__. More information about Tune's `trial schedulers can be found here <tune-schedulers.html>`__. You can check out our `examples page <tune-examples.html>`__ for more code examples.


.. customgalleryitem::
   :tooltip: Getting started with Tune.
   :figure: /images/tune.png
   :description: :doc:`plot_tune-tutorial`

.. customgalleryitem::
   :tooltip: Using the Tune Trainable API
   :description: :doc:`plot_tune-trainable`

.. customgalleryitem::
   :tooltip: Getting started with Tune.
   :description: :doc:`plot_tune-advanced-tutorial`

.. customgalleryitem::
   :tooltip: Getting started with Tune.
   :description: :doc:`plot_tune-distributed`


.. toctree::
   :hidden:

   plot_tune-tutorial.rst
   plot_tune-advanced-tutorial.rst
   plot_tune-distributed.rst



.. :figure: /images/param_actor.png

