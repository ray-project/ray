format: jb-book
root: index
parts:
  - caption: Overview
    chapters:
      - file: ray-overview/index
      - file: ray-overview/installation
      - file: ray-overview/ray-libraries

  - caption: Ray AI Runtime
    chapters:
    - file: ray-air/getting-started
      title: "What is Ray AI Runtime (AIR)?"
    - file: ray-air/key-concepts
    - file: ray-air/user-guides
      sections:
        - file: ray-air/preprocessors
        - file: ray-air/checkpoints
        - file: ray-air/check-ingest
        - file: ray-air/config-scaling
        - file: ray-air/examples/analyze_tuning_results
        - file: ray-air/predictors
        - file: ray-air/examples/serving_guide
        - file: ray-air/deployment
    - file: ray-air/examples/index
      sections:
        - file: ray-air/examples/torch_image_example
        - file: ray-air/examples/convert_existing_pytorch_code_to_ray_air
        - file: ray-air/examples/tfx_tabular_train_to_serve
        - file: ray-air/examples/huggingface_text_classification
        - file: ray-air/examples/sklearn_example
        - file: ray-air/examples/xgboost_example
        - file: ray-air/examples/lightgbm_example
        - file: ray-air/examples/torch_incremental_learning
        - file: ray-air/examples/rl_serving_example
        - file: ray-air/examples/rl_online_example
        - file: ray-air/examples/rl_offline_example
        - file: ray-air/examples/upload_to_comet_ml
        - file: ray-air/examples/upload_to_wandb
        - file: ray-air/examples/feast_example
    - file: ray-air/package-ref
    - file: ray-air/benchmarks

  - caption: Ray Libraries
    chapters:
      - file: data/dataset
        title: Ray Data
        sections:
          - file: data/getting-started
          - file: data/key-concepts
          - file: data/user-guide
          - file: data/examples/index
            sections:
              - file: data/examples/nyc_taxi_basic_processing
                title: Processing the NYC taxi dataset
              - file: data/examples/big_data_ingestion
                title: Large-scale ML Ingest
              - file: data/examples/ocr_example
                title: Scaling OCR with Ray Datasets
              - file: data/advanced-pipelines
              - file: data/random-access
          - file: data/faq
          - file: data/package-ref
          - file: data/integrations

      - file: train/train
        title: Ray Train
        sections:
          - file: train/user_guide
          - file: train/examples
          - file: train/faq
          - file: train/architecture
          - file: train/api

      - file: tune/index
        title: Ray Tune
        sections:
          - file: tune/getting-started
          - file: tune/key-concepts
          - file: tune/tutorials/overview
            sections:
              - file: tune/tutorials/tune-lifecycle
                title: "How Tune Works"
              - file: tune/tutorials/tune-stopping
                title: "How to Stop and Resume"
              - file: tune/tutorials/tune-metrics
                title: "Using Callbacks and Metrics"
              - file: tune/tutorials/tune-distributed
                title: "Distributed Tuning"
              - file: tune/tutorials/tune-output
                title: "Logging Tune Runs"
              - file: tune/tutorials/tune-resources
                title: "Managing Resources"
              - file: tune/tutorials/tune-checkpoints
                title: "Working with Checkpoints"
              - file: tune/tutorials/tune-search-spaces
                title: "Using Search Spaces"
              - file: tune/tutorials/tune-advanced-tutorial
                title: "Understanding PBT"
              - file: tune/tutorials/tune-scalability
                title: "Scalability Benchmarks"
          - file: tune/examples/index
            sections:
              - file: tune/examples/tune-sklearn
                title: "Scikit-Learn Example"
              - file: tune/examples/tune_mnist_keras
                title: "Keras Example"
              - file: tune/examples/tune-pytorch-cifar
                title: "PyTorch Example"
              - file: tune/examples/tune-pytorch-lightning
                title: "PyTorch Lightning Example"
              - file: tune/examples/mxnet_example
                title: "MXNet Example"
              - file: tune/examples/tune-serve-integration-mnist
                title: "Ray Serve Example"
              - file: tune/examples/pbt_ppo_example
                title: "Ray RLlib Example"
              - file: tune/examples/tune-xgboost
                title: "XGBoost Example"
              - file: tune/examples/lightgbm_example
                title: "LightGBM Example"
              - file: tune/examples/horovod_simple
                title: "Horovod Example"
              - file: tune/examples/pbt_transformers
                title: "Huggingface Example"
              - file: tune/examples/tune-comet
                title: "Comet Example"
              - file: tune/examples/tune-wandb
                title: "Weights & Biases Example"
              - file: tune/examples/ax_example
                title: "Ax Example"
              - file: tune/examples/dragonfly_example
                title: "Dragonfly Example"
              - file: tune/examples/skopt_example
                title: "Skopt Example"
              - file: tune/examples/hyperopt_example
                title: "HyperOpt Example"
              - file: tune/examples/bayesopt_example
                title: "Bayesopt Example"
              - file: tune/examples/flaml_example
                title: "FLAML Example"
              - file: tune/examples/bohb_example
                title: "BOHB Example"
              - file: tune/examples/nevergrad_example
                title: "Nevergrad Example"
              - file: tune/examples/optuna_example
                title: "Optuna Example"
              - file: tune/examples/zoopt_example
                title: "ZOOpt Example"
              - file: tune/examples/sigopt_example
                title: "SigOpt Example"
              - file: tune/examples/hebo_example
                title: "HEBO Example"

          - file: tune/faq
          - file: tune/api_docs/overview.rst

      - file: serve/index
        title: Ray Serve
        sections:
          - file: serve/getting_started
          - file: serve/key-concepts
          - file: serve/user-guide
            sections:
              - file: serve/managing-deployments
              - file: serve/handling-dependencies
              - file: serve/http-guide
              - file: serve/http-adapters
              - file: serve/handle-guide
              - file: serve/ml-models
              - file: serve/deploying-serve
              - file: serve/monitoring
              - file: serve/performance
              - file: serve/autoscaling
              - file: serve/deployment-graph
                sections:
                  - file: serve/deployment-graph/deployment-graph-e2e-tutorial
                  - file: serve/deployment-graph/chain_nodes_same_class_different_args
                  - file: serve/deployment-graph/combine_two_nodes_with_passing_input_parallel
                  - file: serve/deployment-graph/control_flow_based_on_user_inputs
                  - file: serve/deployment-graph/visualize_dag_during_development
                  - file: serve/deployment-graph/http_endpoint_for_dag_graph
              - file: serve/production
          - file: serve/architecture
          - file: serve/tutorials/index
          - file: serve/faq
          - file: serve/package-ref

      - file: rllib/index
        title: Ray RLlib
        sections:
          - file: rllib/core-concepts
          - file: rllib/rllib-training
          - file: rllib/rllib-env
          - file: rllib/rllib-algorithms
          - file: rllib/user-guides
            sections:
              - file: rllib/rllib-models
              - file: rllib/rllib-concepts
              - file: rllib/rllib-sample-collection
              - file: rllib/rllib-replay-buffers
              - file: rllib/rllib-offline
              - file: rllib/rllib-dev
          - file: rllib/rllib-examples
          - file: rllib/package_ref/index

      - file: ray-more-libs/index
        title: More Libraries
        sections:
          - file: ray-more-libs/joblib
          - file: ray-more-libs/lightgbm-ray
          - file: ray-more-libs/multiprocessing
          - file: ray-more-libs/ray-collective
          - file: ray-more-libs/ray-lightning
          - file: ray-core/examples/using-ray-with-pytorch-lightning
          - file: ray-more-libs/xgboost-ray
          - file: ray-core/examples/dask_xgboost/dask_xgboost
          - file: ray-core/examples/modin_xgboost/modin_xgboost
          - file: workflows/concepts
            title: Ray Workflows
            sections:
              - file: workflows/basics
              - file: workflows/management
              - file: workflows/metadata
              - file: workflows/events
              - file: workflows/comparison
              - file: workflows/advanced
              - file: workflows/package-ref

  - caption: Ray Core
    chapters:
      - file: ray-core/walkthrough
        title: Getting Started
      - file: ray-core/key-concepts
        title: "Key Concepts"
      - file: ray-core/user-guide
        title: "User Guides"
      - file: ray-core/examples/overview
        title: "Examples"
        sections:
          - file: ray-core/examples/plot_example-a3c
          - file: ray-core/examples/plot_example-lm
          - file: ray-core/examples/plot_hyperparameter
          - file: ray-core/examples/plot_parameter_server
          - file: ray-core/examples/plot_pong_example
          - file: ray-core/examples/highly_parallel
      - file: ray-core/package-ref

  - caption: Ray Clusters
    chapters:
      - file: cluster/index
      - file: cluster/quickstart
      - file: cluster/key-concepts
      - file: cluster/user-guide
      - file: cluster/cloud
      - file: cluster/kuberay
        sections:
          - file: cluster/kuberay/quickstart
          - file: cluster/kuberay/config
          - file: cluster/kuberay/k8s-cluster-setup
          - file: cluster/kuberay/logging
          - file: cluster/kuberay/networking
          - file: cluster/kuberay/gpu
          - file: cluster/kuberay/ml-example
          - file: cluster/kuberay/kuberay-vs-legacy
      - file: cluster/deploy
      - file: cluster/api
      - file: cluster/usage-stats

  - caption: Ray Clusters 2
    chapters:
      - file: cluster2/getting-started
        title: Getting Started
      - file: cluster2/key-concepts/key-concepts
        title: Key Concepts
        sections:
          - file: cluster2/key-concepts/overview
          - file: cluster2/key-concepts/high-level-architecture
          - file: cluster2/key-concepts/jobs
          - file: cluster2/key-concepts/nodes-vs-workers
          - file: cluster2/key-concepts/scheduling-and-autoscaling
          - file: cluster2/key-concepts/configuration
          - file: cluster2/key-concepts/things-to-know
      - file: cluster2/user-guides/user-guides
        title: User Guides
        sections:
        - file: cluster2/user-guides/installing-ray
        - file: cluster2/user-guides/launching-ray-cluster-on-k8s/launching-ray-cluster-on-k8s
          sections:
          - file: cluster2/user-guides/launching-ray-cluster-on-k8s/deploy-and-interact-with-your-cluster
          - file: cluster2/user-guides/launching-ray-cluster-on-k8s/using-ray-operator
          - file: cluster2/user-guides/launching-ray-cluster-on-k8s/crds
          - file: cluster2/user-guides/launching-ray-cluster-on-k8s/networking
          - file: cluster2/user-guides/launching-ray-cluster-on-k8s/deploy-on-aws
          - file: cluster2/user-guides/launching-ray-cluster-on-k8s/deploy-on-azure
          - file: cluster2/user-guides/launching-ray-cluster-on-k8s/deploy-on-gcp
          - file: cluster2/user-guides/launching-ray-cluster-on-k8s/set-up-gpus
          - file: cluster2/user-guides/launching-ray-cluster-on-k8s/run-workloads
        - file: cluster2/user-guides/launching-ray-cluster-on-cloud-vms/launching-ray-cluster-on-cloud-vms
          sections:
          - file: cluster2/user-guides/launching-ray-cluster-on-cloud-vms/aws.md
          - file: cluster2/user-guides/launching-ray-cluster-on-cloud-vms/azure.md
          - file: cluster2/user-guides/launching-ray-cluster-on-cloud-vms/gcp.md
          - file: cluster2/user-guides/launching-ray-cluster-on-cloud-vms/add-your-own-cloud-provider.md
        - file: cluster2/user-guides/running-ray-cluster-on-prem
        - file: cluster2/user-guides/running-jobs/running-jobs
          sections:
          - file: cluster2/user-guides/running-jobs/job-submission-cli
          - file: cluster2/user-guides/running-jobs/job-submission-sdk
          - file: cluster2/user-guides/running-jobs/job-submission-rest
          - file: cluster2/user-guides/running-jobs/ray-client
        - file: cluster2/user-guides/monitoring-and-observing-ray-cluster
        - file: cluster2/user-guides/manual-cluster-setup
        - file: cluster2/user-guides/large-cluster-best-practices
        - file: cluster2/user-guides/multi-tenancy-best-practices
        - file: cluster2/user-guides/configuring-autoscaling
        - file: cluster2/user-guides/community-supported-cluster-manager/using-a-community-supported-cluster-manager
          sections:
          - file: cluster2/user-guides/community-supported-cluster-manager/yarn
          - file: cluster2/user-guides/community-supported-cluster-manager/slurm
          - file: cluster2/user-guides/community-supported-cluster-manager/lsf
      - file: cluster2/tutorials/tutorials
        title: Examples
        sections:
          - file: cluster2/tutorials/learn-ray-cluster-basics/learn-ray-cluster-basics
            sections:
              - file: cluster2/tutorials/learn-ray-cluster-basics/launching-ray-cluster-on-k8s
              - file: cluster2/tutorials/learn-ray-cluster-basics/running-job-via-job-submission
              - file: cluster2/tutorials/learn-ray-cluster-basics/scale-your-job-with-autoscaling
              - file: cluster2/tutorials/learn-ray-cluster-basics/observe-your-app
              - file: cluster2/tutorials/learn-ray-cluster-basics/shutting-down-your-ray-cluster
          - file: cluster2/tutorials/running-autoscaling-program-on-ray-on-k8s/running-autoscaling-program-on-ray-on-k8s
            sections:
              - file: cluster2/tutorials/running-autoscaling-program-on-ray-on-k8s/running-a-rec-model
          - file: cluster2/tutorials/setting-up-ray-cluster-for-development/setting-up-ray-cluster-for-development
            sections:
              - file: cluster2/tutorials/setting-up-ray-cluster-for-development/todo
          - file: cluster2/tutorials/setting-up-ray-cluster-for-production/setting-up-ray-cluster-for-production
            sections:
              - file: cluster2/tutorials/setting-up-ray-cluster-for-production/todo
      - file: cluster2/references/references
        sections:
          - file: cluster2/references/job-submission-apis
          - file: cluster2/references/ray-cluster-configuration
          - file: cluster2/references/ray-job-submission

  - caption: References
    chapters:
      - file: ray-references/api

  - caption: Developer Guides
    chapters:
      - file: ray-contribute/stability
      - file: ray-contribute/getting-involved
        sections:
          - file: ray-contribute/development
          - file: ray-contribute/docs
          - file: ray-contribute/fake-autoscaler
          - file: ray-core/examples/testing-tips
      - file: ray-core/configure
      - file: ray-observability/index
      - file: ray-contribute/whitepaper
