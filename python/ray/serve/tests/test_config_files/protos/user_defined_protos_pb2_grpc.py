# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

# This is required to ensure user_defined_protos_pb2 is in the sys.path and importable
# from this file
import pathlib
import sys

protos_path = pathlib.Path(__file__).parent
sys.path.insert(0, str(protos_path))

import user_defined_protos_pb2 as protos_pb2


class UserDefinedServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.__call__ = channel.unary_unary(
            "/userdefinedprotos.UserDefinedService/__call__",
            request_serializer=protos_pb2.UserDefinedMessage.SerializeToString,
            response_deserializer=protos_pb2.UserDefinedResponse.FromString,
        )
        self.Method1 = channel.unary_unary(
            "/userdefinedprotos.UserDefinedService/Method1",
            request_serializer=protos_pb2.UserDefinedMessage.SerializeToString,
            response_deserializer=protos_pb2.UserDefinedResponse.FromString,
        )
        self.Method2 = channel.unary_unary(
            "/userdefinedprotos.UserDefinedService/Method2",
            request_serializer=protos_pb2.UserDefinedMessage2.SerializeToString,
            response_deserializer=protos_pb2.UserDefinedResponse2.FromString,
        )
        self.Streaming = channel.unary_stream(
            "/userdefinedprotos.UserDefinedService/Streaming",
            request_serializer=protos_pb2.UserDefinedMessage.SerializeToString,
            response_deserializer=protos_pb2.UserDefinedResponse.FromString,
        )


class UserDefinedServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def __call__(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Method1(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Method2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Streaming(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_UserDefinedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "__call__": grpc.unary_unary_rpc_method_handler(
            servicer.__call__,
            request_deserializer=protos_pb2.UserDefinedMessage.FromString,
            response_serializer=protos_pb2.UserDefinedResponse.SerializeToString,
        ),
        "Method1": grpc.unary_unary_rpc_method_handler(
            servicer.Method1,
            request_deserializer=protos_pb2.UserDefinedMessage.FromString,
            response_serializer=protos_pb2.UserDefinedResponse.SerializeToString,
        ),
        "Method2": grpc.unary_unary_rpc_method_handler(
            servicer.Method2,
            request_deserializer=protos_pb2.UserDefinedMessage2.FromString,
            response_serializer=protos_pb2.UserDefinedResponse2.SerializeToString,
        ),
        "Streaming": grpc.unary_stream_rpc_method_handler(
            servicer.Streaming,
            request_deserializer=protos_pb2.UserDefinedMessage.FromString,
            response_serializer=protos_pb2.UserDefinedResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "userdefinedprotos.UserDefinedService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class UserDefinedService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def __call__(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/userdefinedprotos.UserDefinedService/__call__",
            protos_pb2.UserDefinedMessage.SerializeToString,
            protos_pb2.UserDefinedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Method1(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/userdefinedprotos.UserDefinedService/Method1",
            protos_pb2.UserDefinedMessage.SerializeToString,
            protos_pb2.UserDefinedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Method2(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/userdefinedprotos.UserDefinedService/Method2",
            protos_pb2.UserDefinedMessage2.SerializeToString,
            protos_pb2.UserDefinedResponse2.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Streaming(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/userdefinedprotos.UserDefinedService/Streaming",
            protos_pb2.UserDefinedMessage.SerializeToString,
            protos_pb2.UserDefinedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )


class FruitServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FruitStand = channel.unary_unary(
            "/userdefinedprotos.FruitService/FruitStand",
            request_serializer=protos_pb2.FruitAmounts.SerializeToString,
            response_deserializer=protos_pb2.FruitCosts.FromString,
        )


class FruitServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FruitStand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_FruitServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "FruitStand": grpc.unary_unary_rpc_method_handler(
            servicer.FruitStand,
            request_deserializer=protos_pb2.FruitAmounts.FromString,
            response_serializer=protos_pb2.FruitCosts.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "userdefinedprotos.FruitService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class FruitService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FruitStand(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/userdefinedprotos.FruitService/FruitStand",
            protos_pb2.FruitAmounts.SerializeToString,
            protos_pb2.FruitCosts.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
