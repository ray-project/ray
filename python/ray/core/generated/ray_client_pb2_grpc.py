# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import ray_client_pb2 as src_dot_ray_dot_protobuf_dot_ray__client__pb2


class RayletDriverStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/ray.rpc.RayletDriver/Init',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.InitRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.InitResponse.FromString,
                )
        self.PrepRuntimeEnv = channel.unary_unary(
                '/ray.rpc.RayletDriver/PrepRuntimeEnv',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.PrepRuntimeEnvRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.PrepRuntimeEnvResponse.FromString,
                )
        self.GetObject = channel.unary_stream(
                '/ray.rpc.RayletDriver/GetObject',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.GetRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.GetResponse.FromString,
                )
        self.PutObject = channel.unary_unary(
                '/ray.rpc.RayletDriver/PutObject',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.PutRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.PutResponse.FromString,
                )
        self.WaitObject = channel.unary_unary(
                '/ray.rpc.RayletDriver/WaitObject',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.WaitRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.WaitResponse.FromString,
                )
        self.Schedule = channel.unary_unary(
                '/ray.rpc.RayletDriver/Schedule',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientTask.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientTaskTicket.FromString,
                )
        self.Terminate = channel.unary_unary(
                '/ray.rpc.RayletDriver/Terminate',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.TerminateRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.TerminateResponse.FromString,
                )
        self.ClusterInfo = channel.unary_unary(
                '/ray.rpc.RayletDriver/ClusterInfo',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClusterInfoRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClusterInfoResponse.FromString,
                )
        self.KVGet = channel.unary_unary(
                '/ray.rpc.RayletDriver/KVGet',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVGetRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVGetResponse.FromString,
                )
        self.KVPut = channel.unary_unary(
                '/ray.rpc.RayletDriver/KVPut',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVPutRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVPutResponse.FromString,
                )
        self.KVDel = channel.unary_unary(
                '/ray.rpc.RayletDriver/KVDel',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVDelRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVDelResponse.FromString,
                )
        self.KVList = channel.unary_unary(
                '/ray.rpc.RayletDriver/KVList',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVListRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVListResponse.FromString,
                )
        self.KVExists = channel.unary_unary(
                '/ray.rpc.RayletDriver/KVExists',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVExistsRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVExistsResponse.FromString,
                )
        self.ListNamedActors = channel.unary_unary(
                '/ray.rpc.RayletDriver/ListNamedActors',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientListNamedActorsRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientListNamedActorsResponse.FromString,
                )
        self.PinRuntimeEnvURI = channel.unary_unary(
                '/ray.rpc.RayletDriver/PinRuntimeEnvURI',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientPinRuntimeEnvURIRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientPinRuntimeEnvURIResponse.FromString,
                )


class RayletDriverServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrepRuntimeEnv(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetObject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutObject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WaitObject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Schedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Terminate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClusterInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KVGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KVPut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KVDel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KVList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KVExists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNamedActors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PinRuntimeEnvURI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RayletDriverServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.InitRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.InitResponse.SerializeToString,
            ),
            'PrepRuntimeEnv': grpc.unary_unary_rpc_method_handler(
                    servicer.PrepRuntimeEnv,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.PrepRuntimeEnvRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.PrepRuntimeEnvResponse.SerializeToString,
            ),
            'GetObject': grpc.unary_stream_rpc_method_handler(
                    servicer.GetObject,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.GetRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.GetResponse.SerializeToString,
            ),
            'PutObject': grpc.unary_unary_rpc_method_handler(
                    servicer.PutObject,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.PutRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.PutResponse.SerializeToString,
            ),
            'WaitObject': grpc.unary_unary_rpc_method_handler(
                    servicer.WaitObject,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.WaitRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.WaitResponse.SerializeToString,
            ),
            'Schedule': grpc.unary_unary_rpc_method_handler(
                    servicer.Schedule,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientTask.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientTaskTicket.SerializeToString,
            ),
            'Terminate': grpc.unary_unary_rpc_method_handler(
                    servicer.Terminate,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.TerminateRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.TerminateResponse.SerializeToString,
            ),
            'ClusterInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ClusterInfo,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClusterInfoRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClusterInfoResponse.SerializeToString,
            ),
            'KVGet': grpc.unary_unary_rpc_method_handler(
                    servicer.KVGet,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVGetRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVGetResponse.SerializeToString,
            ),
            'KVPut': grpc.unary_unary_rpc_method_handler(
                    servicer.KVPut,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVPutRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVPutResponse.SerializeToString,
            ),
            'KVDel': grpc.unary_unary_rpc_method_handler(
                    servicer.KVDel,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVDelRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVDelResponse.SerializeToString,
            ),
            'KVList': grpc.unary_unary_rpc_method_handler(
                    servicer.KVList,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVListRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVListResponse.SerializeToString,
            ),
            'KVExists': grpc.unary_unary_rpc_method_handler(
                    servicer.KVExists,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVExistsRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVExistsResponse.SerializeToString,
            ),
            'ListNamedActors': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNamedActors,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientListNamedActorsRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientListNamedActorsResponse.SerializeToString,
            ),
            'PinRuntimeEnvURI': grpc.unary_unary_rpc_method_handler(
                    servicer.PinRuntimeEnvURI,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientPinRuntimeEnvURIRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientPinRuntimeEnvURIResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ray.rpc.RayletDriver', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RayletDriver(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ray.rpc.RayletDriver/Init',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.InitRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.InitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrepRuntimeEnv(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ray.rpc.RayletDriver/PrepRuntimeEnv',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.PrepRuntimeEnvRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.PrepRuntimeEnvResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ray.rpc.RayletDriver/GetObject',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.GetRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ray.rpc.RayletDriver/PutObject',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.PutRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.PutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WaitObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ray.rpc.RayletDriver/WaitObject',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.WaitRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.WaitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Schedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ray.rpc.RayletDriver/Schedule',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientTask.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientTaskTicket.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Terminate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ray.rpc.RayletDriver/Terminate',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.TerminateRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.TerminateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClusterInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ray.rpc.RayletDriver/ClusterInfo',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClusterInfoRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClusterInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KVGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ray.rpc.RayletDriver/KVGet',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVGetRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KVPut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ray.rpc.RayletDriver/KVPut',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVPutRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVPutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KVDel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ray.rpc.RayletDriver/KVDel',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVDelRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVDelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KVList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ray.rpc.RayletDriver/KVList',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVListRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KVExists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ray.rpc.RayletDriver/KVExists',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVExistsRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.KVExistsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNamedActors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ray.rpc.RayletDriver/ListNamedActors',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientListNamedActorsRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientListNamedActorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PinRuntimeEnvURI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ray.rpc.RayletDriver/PinRuntimeEnvURI',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientPinRuntimeEnvURIRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.ClientPinRuntimeEnvURIResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RayletDataStreamerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Datapath = channel.stream_stream(
                '/ray.rpc.RayletDataStreamer/Datapath',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.DataRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.DataResponse.FromString,
                )


class RayletDataStreamerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Datapath(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RayletDataStreamerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Datapath': grpc.stream_stream_rpc_method_handler(
                    servicer.Datapath,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.DataRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.DataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ray.rpc.RayletDataStreamer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RayletDataStreamer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Datapath(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/ray.rpc.RayletDataStreamer/Datapath',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.DataRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.DataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RayletLogStreamerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Logstream = channel.stream_stream(
                '/ray.rpc.RayletLogStreamer/Logstream',
                request_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.LogSettingsRequest.SerializeToString,
                response_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.LogData.FromString,
                )


class RayletLogStreamerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Logstream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RayletLogStreamerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Logstream': grpc.stream_stream_rpc_method_handler(
                    servicer.Logstream,
                    request_deserializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.LogSettingsRequest.FromString,
                    response_serializer=src_dot_ray_dot_protobuf_dot_ray__client__pb2.LogData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ray.rpc.RayletLogStreamer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RayletLogStreamer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Logstream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/ray.rpc.RayletLogStreamer/Logstream',
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.LogSettingsRequest.SerializeToString,
            src_dot_ray_dot_protobuf_dot_ray__client__pb2.LogData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
