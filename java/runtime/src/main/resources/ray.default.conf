// This file contains default values of all Ray configurations.
// Users should define their own 'ray.conf' file in the classpath,
// or use Java properties, to overwrite these values.

ray {
  // ----------------------
  // Basic configurations
  // ----------------------

  // IP of this node. if not provided, IP will be automatically detected.
  node-ip: ""

  // Run mode, available options are:
  //
  // `SINGLE_PROCESS`: Ray is running in one single Java process, without Raylet backend,
  //                   object store, and GCS. It's useful for debug.
  // `CLUSTER`: Ray is running on one or more nodes, with multiple processes.
  run-mode: CLUSTER

  // Available resources on this node, for example "CPU:4,GPU:0".
  resources: ""

  // Configuration items about job.
  job {
    // If worker.mode is DRIVER, specify the job id.
    // If not provided, a random id will be used.
    id: ""
    // If this config is set, worker will use different paths to load resources when
    // executing tasks from different jobs. E.g. if it's set to '/tm/job_resources',
    // the path for job 123 will be '/tmp/job_resources/123'.
    resource-path: ""
  }

  // Root dir of log files.
  log-dir: /tmp/ray/logs

  // If true, output of worker processes will be redirected to log files.
  // Otherwise, output will be printed to console.
  redirect-output: true

  // Custom worker jvm parameters.
  worker.jvm-parameters: []

  // Custom `java.library.path`
  // Note, do not use `dir1:dir2` format, put each dir as a list item.
  library.path: []

  // Custom classpath.
  // Note, do not use `dir1:dir2` format, put each dir as a list item.
  classpath = []

  // ----------------------
  // Redis configurations
  // ----------------------
  redis {
    // The address of the redis server to connect, in format `ip:port`.
    // If not provided, Ray processes will be started locally, including
    // Redis server, Raylet and object store.
    address: ""
    // If `redis.server` isn't provided, which port we should use to start redis server.
    head-port: 6379
    // The password used to start the redis server on the head node.
    head-password: ""
    // The password used to connect to the redis server.
    password:""
    // If `redis.server` isn't provided, how many Redis shards we should start in addition to the
    // primary Redis shard. The ports of these shards will be `head-port + 1`, `head-port + 2`, etc.
    shard-number: 1
  }

  // ----------------------------
  // Object store configurations
  // ----------------------------
  object-store {
    // RPC socket name of object store
    socket-name: /tmp/ray/sockets/object_store
    // Initial size of the object store.
    size: 10 MB
  }

  // ----------------------------
  // Raylet configurations
  // ----------------------------
  raylet {
    // RPC socket name of Raylet
    socket-name: /tmp/ray/sockets/raylet

    // See src/ray/ray_config_def.h for options.
    config {
      num_workers_per_process_java: 10
    }
  }

  // ----------------------------
  // configurations under SINGLE_PROCESS mode
  // ----------------------------
  dev-runtime {
    // Number of threads that you process tasks
    execution-parallelism: 10
  }

}
