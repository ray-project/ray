/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_ray_streaming_runtime_transfer_DataWriter */

#ifndef _Included_org_ray_streaming_runtime_transfer_DataWriter
#define _Included_org_ray_streaming_runtime_transfer_DataWriter
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_ray_streaming_runtime_transfer_DataWriter
 * Method:    createWriterNative
 * Signature: ([[B[[B[JJ[BZ)J
 */
JNIEXPORT jlong JNICALL Java_org_ray_streaming_runtime_transfer_DataWriter_createWriterNative
  (JNIEnv *, jclass, jobjectArray, jobjectArray, jlongArray, jlong, jbyteArray, jboolean);

/*
 * Class:     org_ray_streaming_runtime_transfer_DataWriter
 * Method:    writeMessageNative
 * Signature: (JJJI)J
 */
JNIEXPORT jlong JNICALL Java_org_ray_streaming_runtime_transfer_DataWriter_writeMessageNative
  (JNIEnv *, jobject, jlong, jlong, jlong, jint);

/*
 * Class:     org_ray_streaming_runtime_transfer_DataWriter
 * Method:    stopWriterNative
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ray_streaming_runtime_transfer_DataWriter_stopWriterNative
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_ray_streaming_runtime_transfer_DataWriter
 * Method:    closeWriterNative
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_ray_streaming_runtime_transfer_DataWriter_closeWriterNative
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
