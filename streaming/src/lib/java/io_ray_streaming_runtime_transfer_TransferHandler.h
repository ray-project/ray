// Copyright 2017 The Ray Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class io_ray_streaming_runtime_transfer_TransferHandler */

#ifndef _Included_io_ray_streaming_runtime_transfer_TransferHandler
#define _Included_io_ray_streaming_runtime_transfer_TransferHandler
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     io_ray_streaming_runtime_transfer_TransferHandler
 * Method:    createWriterClientNative
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL
Java_io_ray_streaming_runtime_transfer_TransferHandler_createWriterClientNative(JNIEnv *,
                                                                                jobject);

/*
 * Class:     io_ray_streaming_runtime_transfer_TransferHandler
 * Method:    createReaderClientNative
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL
Java_io_ray_streaming_runtime_transfer_TransferHandler_createReaderClientNative(JNIEnv *,
                                                                                jobject);

/*
 * Class:     io_ray_streaming_runtime_transfer_TransferHandler
 * Method:    handleWriterMessageNative
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL
Java_io_ray_streaming_runtime_transfer_TransferHandler_handleWriterMessageNative(
    JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     io_ray_streaming_runtime_transfer_TransferHandler
 * Method:    handleWriterMessageSyncNative
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL
Java_io_ray_streaming_runtime_transfer_TransferHandler_handleWriterMessageSyncNative(
    JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     io_ray_streaming_runtime_transfer_TransferHandler
 * Method:    handleReaderMessageNative
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL
Java_io_ray_streaming_runtime_transfer_TransferHandler_handleReaderMessageNative(
    JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     io_ray_streaming_runtime_transfer_TransferHandler
 * Method:    handleReaderMessageSyncNative
 * Signature: (J[B)[B
 */
JNIEXPORT jbyteArray JNICALL
Java_io_ray_streaming_runtime_transfer_TransferHandler_handleReaderMessageSyncNative(
    JNIEnv *, jobject, jlong, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
