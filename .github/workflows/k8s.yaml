name: K8s

on: [push, pull_request]

env:
  # Git GITHUB_... variables are useful for translating Travis environment variables
  GITHUB_BASE_SHA: ${{ github.event.pull_request.base.sha }}
  GITHUB_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
  GITHUB_PULL_REQUEST: ${{ github.event.number }}

jobs:
  build:
    name: minikube
    runs-on: ubuntu-18.04
    env:
      PYTHON: 3.8
      TRAVIS_COMMIT: ${{ github.sha }}
    steps:
    - name: Pre-checkout system configuration
      # We add -l to process .bashrc, but need -e -o pipefail for consistency with GitHub Actions's default behavior.
      shell: bash -e -o pipefail -l {0}
      run: |
        # Note: only configure settings here that are required _before_ the repository is cloned (such as Git settings).
        # Different machines behave very differently with Bash initialization -- make them more uniform
        rm -f -- ~/.bash_profile ~/.profile ~/.bashrc
        printf '\n%s\n' 'if [ -n "${BASH_VERSION}" ] && [ -f ~/.bashrc ]; then . ~/.bashrc; fi' >> ~/.profile
        git config --global core.symlinks true && git config --global core.autocrlf false
        if command -v dpkg > /dev/null; then sudo dpkg-reconfigure debconf -f noninteractive -p high; fi
    - name: Checkout repository
      uses: actions/checkout@v1
    - name: Setup Minikube
      uses: manusa/actions-setup-minikube@v2.1.0
      with:
        minikube version: 'v1.13.1'
        kubernetes version: 'v1.19.2'
    - name: Sanity check minikube
      run: |
        kubectl get nodes
        kubectl get pods --all-namespaces
        docker ps
    - name: Prepare caching
      id: info
      shell: bash
      run: |
        case "${OSTYPE}" in
          linux*) pip_cache=~/.cache/pip;;
          darwin*) pip_cache=~/Library/Caches/pip;;
          msys) pip_cache="${LOCALAPPDATA}\pip\Cache";;
        esac
        cat <<-EOF
        ::set-output name=git_tree_hash::$(git cat-file -p HEAD | sed -n "s/^tree //p")
        ::set-output name=pip_cache::${pip_cache}
        EOF
    - name: Cache (pip)
      uses: actions/cache@v1.1.2
      continue-on-error: true
      if: steps.info.outputs.pip_cache
      with:
        path: ${{ steps.info.outputs.pip_cache }}
        key: |
          pip-${{ runner.os }}-${{ steps.info.outputs.git_tree_hash }}
        restore-keys: |
          pip-${{ runner.os }}-
          pip-
    - name: Run CI script
      env:
        BAZEL_CACHE_CREDENTIAL_B64: ${{ secrets.BAZEL_CACHE_CREDENTIAL_B64 }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LINUX_WHEELS: 1
        RAY_DEFAULT_BUILD: 1
      run: |
        python -u ci/remote-watch.py --skip_repo=ray-project/ray &
        . ./ci/travis/ci.sh init
        . ./ci/travis/ci.sh build
        which docker
        docker image ls
        echo $PATH
        python ci/travis/build-docker-images.py || true