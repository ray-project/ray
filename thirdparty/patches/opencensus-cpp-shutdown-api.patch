diff --git opencensus/stats/internal/stats_exporter.cc opencensus/stats/internal/stats_exporter.cc
--- opencensus/stats/internal/stats_exporter.cc
+++ opencensus/stats/internal/stats_exporter.cc
@@ -95,13 +95,24 @@ void StatsExporterImpl::ClearHandlersForTesting() {
 }
 
 void StatsExporterImpl::StartExportThread() EXCLUSIVE_LOCKS_REQUIRED(mu_) {
-  t_ = std::thread(&StatsExporterImpl::RunWorkerLoop, this);
   thread_started_ = true;
+  t_ = std::thread(&StatsExporterImpl::RunWorkerLoop, this);
+}
+
+void StatsExporterImpl::Shutdown() EXCLUSIVE_LOCKS_REQUIRED(mu_) {
+  if (!thread_started_) {
+    return;
+  }
+  thread_started_ = false;
+  // Join loop thread when shutdown.
+  if (t_.joinable()) {
+    t_.join();
+  }
 }
 
 void StatsExporterImpl::RunWorkerLoop() {
   absl::Time next_export_time = GetNextExportTime();
-  while (true) {
+  while (thread_started_) {
     // SleepFor() returns immediately when given a negative duration.
     absl::SleepFor(next_export_time - absl::Now());
     // In case the last export took longer than the export interval, we
@@ -142,5 +153,10 @@ void StatsExporter::ClearHandlersForTesting() {
   StatsExporterImpl::Get()->ClearHandlersForTesting();
 }
 
+void StatsExporter::Shutdown() {
+  StatsExporterImpl::Get()->Shutdown();
+  StatsExporterImpl::Get()->ClearHandlersForTesting();
+}
+
 }  // namespace stats
 }  // namespace opencensus
diff --git opencensus/stats/internal/stats_exporter_impl.h opencensus/stats/internal/stats_exporter_impl.h
--- opencensus/stats/internal/stats_exporter_impl.h
+++ opencensus/stats/internal/stats_exporter_impl.h
@@ -37,6 +37,7 @@ class StatsExporterImpl {
   absl::Time GetNextExportTime() const;
   void AddView(const ViewDescriptor& view);
   void RemoveView(absl::string_view name);
+  void Shutdown();
 
   // Adds a handler, which cannot be subsequently removed (except by
   // ClearHandlersForTesting()). The background thread is started when the
diff --git opencensus/stats/stats_exporter.h opencensus/stats/stats_exporter.h
--- opencensus/stats/stats_exporter.h
+++ opencensus/stats/stats_exporter.h
@@ -45,6 +45,7 @@ class StatsExporter final {
   // Removes the view with 'name' from the registry, if one is registered.
   static void RemoveView(absl::string_view name);
 
+  static void Shutdown();
   // StatsExporter::Handler is the interface for push exporters that export
   // recorded data for registered views. The exporter should provide a static
   // Register() method that takes any arguments needed by the exporter (e.g. a
