group: runtime images
steps:
  - name: min-cpubase
    label: "wanda: min.py{{matrix}}.cpu.base"
    tags:
      - python_dependencies
      - docker
    wanda: anyscale/ci/docker/anyscale.cpu.base.wanda.yaml
    matrix:
      - "3.9"
      - "3.10"
      - "3.11"
    env:
      PYTHON_VERSION: "{{matrix}}"

  - name: min-cudabase
    label: "wanda: min.py{{matrix.python}}.cuda{{matrix.cuda}}.base"
    tags:
      - python_dependencies
      - docker
    wanda: anyscale/ci/docker/anyscale.cuda.base.wanda.yaml
    matrix:
      setup:
        python:
          - "3.9"
          - "3.10"
          - "3.11"
        cuda:
          - "11.7.1"
          - "11.8.0"
          - "12.1.1"
          - "12.3.2"
    env:
      PYTHON_VERSION: "{{matrix.python}}"
      CUDA_VERSION: "{{matrix.cuda}}"

  - label: ":tapioca: go download helper"
    key: runtime-helper
    instance_type: small
    commands:
      - bash anyscale/go/build-on-buildkite.sh
    depends_on:
      - forge
    job_env: forge

  - label: ":tapioca: runtime py{{matrix}} wheel"
    key: runtime-wheels
    commands:
      - bazel run //ci/ray_ci:build_in_docker -- wheel --python-version {{matrix}}
      - bash anyscale/ci/upload-wheels.sh
    instance_type: medium
    depends_on:
      - manylinux
      - forge
    job_env: forge
    tags: docker
    matrix:
      - "3.9"
      - "3.10"
      - "3.11"

  - label: "Check ray wheels"
    key: check-ray-wheels
    commands:
      - source anyscale/ci/setup-env.sh
      - bazel run //anyscale/ci:check_wheels_exist_s3 -- --branch="$$UPSTREAM_BRANCH" --ray_version="$$RAY_VERSION"  --commit_hash="$(cat .UPSTREAM)"
    depends_on:
      - forge

  - label: ":tapioca: runtime py{{matrix.py}} {{matrix.base}} image"
    key: runtime-image
    tags: docker
    commands:
      - bash anyscale/ci/build-ray-image.sh {{matrix.py}} {{matrix.base}}
    instance_type: medium
    depends_on:
      - runtime-wheels
      - runtime-helper
      - raycpubase
      - raycudabase
      - check-ray-wheels
    job_env: forge
    mount_buildkite_agent: true
    matrix:
      setup:
        py:
          - "3.9"
          - "3.10"
          - "3.11"
        base:
          - "cpu"
          - "cu11.7.1-cudnn8"
          - "cu11.8.0-cudnn8"
          - "cu12.1.1-cudnn8"
          - "cu12.3.2-cudnn9"

  - label: ":tapioca: minimized runtime py{{matrix.py}} {{matrix.base}} image"
    key: runtime-min-image
    tags: docker
    commands:
      - bash anyscale/ci/build-ray-image.sh {{matrix.py}} {{matrix.base}} ray 1
    instance_type: medium
    depends_on:
      - runtime-wheels
      - runtime-helper
      - min-cpubase
      - min-cudabase
      - check-ray-wheels
    job_env: forge
    mount_buildkite_agent: true
    matrix:
      setup:
        py:
          - "3.9"
          - "3.10"
          - "3.11"
        base:
          - "cpu"
          - "cu11.7.1"
          - "cu11.8.0"
          - "cu12.1.1"
          - "cu12.3.2"

  - label: ":tapioca: runtime ml py{{matrix.py}} {{matrix.base}} image"
    key: runtime-ml-image
    tags: docker
    commands:
      - bash anyscale/ci/build-ray-image.sh {{matrix.py}} {{matrix.base}} ray-ml
    instance_type: medium
    depends_on:
      - runtime-wheels
      - runtime-helper
      - ray-mlcpubase
      - ray-mlcudabase
      - check-ray-wheels
    job_env: forge
    mount_buildkite_agent: true
    matrix:
      setup:
        py:
          - "3.9"
          - "3.10"
          - "3.11"
        base:
          - "cpu"
          - "cu12.1.1-cudnn8"

  - label: ":tapioca: check runtime site package tarball"
    depends_on:
      - runtime-image
      - runtime-min-image
      - runtime-ml-image
    key: check-runtime-site-pkg
    tags: docker
    commands:
      - bash anyscale/ci/check-ray-site-pkg.sh
    instance_type: small
    job_env: forge

  # We skip production and predeploy; will copy them on final image
  # building. We need to copy to staging for release tests to run.
  - label: ":tapioca: upload runtime site package tarball {{matrix}}"
    key: upload-runtime-site-pkg-staging
    depends_on: check-runtime-site-pkg
    tags: docker
    commands:
      - bash anyscale/ci/upload-ray-site-pkg.sh {{matrix}}
    instance_type: small
    job_env: forge
    matrix:
      - development
      - staging

  - label: ":tapioca: upload runtime site package tarball {{matrix}}"
    if: build.env("RUNTIME_BUILD_ALL") == "true"
    key: upload-runtime-site-pkg-prod
    depends_on: check-runtime-site-pkg
    tags: docker
    commands:
      - bash anyscale/ci/upload-ray-site-pkg.sh {{matrix}}
    instance_type: small
    job_env: forge
    matrix:
      - predeploy
      - production
