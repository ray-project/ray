sudo: required

language: generic

matrix:
  include:
    - os: linux
      dist: trusty
      env: PYTHON=2.7

    - os: linux
      dist: trusty
      env: PYTHON=3.5

    - os: osx
      osx_image: xcode7
      env: PYTHON=2.7

    - os: osx
      osx_image: xcode7
      env: PYTHON=3.5

    - os: linux
      dist: trusty
      env: LINT=1
      before_install:
        # In case we ever want to use a different version of clang-format:
        #- wget -O - http://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        #- echo "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty main" | sudo tee -a /etc/apt/sources.list > /dev/null
        - sudo apt-get update -qq
        - sudo apt-get install -qq clang-format-3.8
      install: []
      script:
        - .travis/check-git-clang-format-output.sh
        # Try generating Sphinx documentation. To do this, we need to install
        # Ray first.
        - ./.travis/install-dependencies.sh
        - export PATH="$HOME/miniconda/bin:$PATH"
        - cd doc
        - pip install -q -r requirements-doc.txt
        - sphinx-build -W -b html -d _build/doctrees source _build/html
        - cd ..
        # Run Python linting.
        - flake8 --exclude=python/ray/core/src/common/flatbuffers_ep-prefix/,python/ray/core/generated/,src/common/format/,doc/source/conf.py,python/ray/cloudpickle/

    - os: linux
      dist: trusty
      env: VALGRIND=1 PYTHON=2.7
      before_install:
        - sudo apt-get update -qq
        - sudo apt-get install -qq valgrind
      install:
        - ./.travis/install-dependencies.sh
        - export PATH="$HOME/miniconda/bin:$PATH"
        - ./.travis/install-ray.sh

      script:
        - cd python/ray/core
        - bash ../../../src/common/test/run_valgrind.sh
        - bash ../../../src/plasma/test/run_valgrind.sh
        - bash ../../../src/local_scheduler/test/run_valgrind.sh
        - cd ../../..

        - python ./python/ray/plasma/test/test.py valgrind
        - python ./python/ray/local_scheduler/test/test.py valgrind
        - python ./python/ray/global_scheduler/test/test.py valgrind

    # Build Linux wheels.
    - os: linux
      dist: trusty
      env: LINUX_WHEELS=1
      install:
        - ./.travis/install-dependencies.sh
        # This command should be kept in sync with ray/python/README-building-wheels.md.
        - docker run --rm -w /ray -v `pwd`:/ray -ti quay.io/xhochy/arrow_manylinux1_x86_64_base:latest /ray/python/build-wheel-manylinux1.sh
      script:
        - ./.travis/test-wheels.sh

    # Build MacOS wheels.
    - os: osx
      osx_image: xcode7
      env: MAC_WHEELS=1
      install:
        - ./.travis/install-dependencies.sh
        # This command should be kept in sync with ray/python/README-building-wheels.md.
        - ./python/build-wheel-macos.sh
      script:
        - ./.travis/test-wheels.sh

    # Test GCS integration
    - os: linux
      dist: trusty
      env:
        - PYTHON=3.5
        - RAY_USE_NEW_GCS=on

install:
  - ./.travis/install-dependencies.sh
  - export PATH="$HOME/miniconda/bin:$PATH"
  - ./.travis/install-ray.sh
  - ./.travis/install-cython-examples.sh

  - cd python/ray/core
  - bash ../../../src/ray/test/run_gcs_tests.sh
  # Raylet tests.
  - bash ../../../src/ray/test/run_object_manager_tests.sh
  - ./src/ray/raylet/task_test
  - ./src/ray/raylet/worker_pool_test
  - ./src/ray/raylet/lineage_cache_test

  - bash ../../../src/common/test/run_tests.sh
  - bash ../../../src/plasma/test/run_tests.sh
  - bash ../../../src/local_scheduler/test/run_tests.sh
  - cd ../../..

script:
  - export PATH="$HOME/miniconda/bin:$PATH"

  - python python/ray/common/test/test.py
  - python python/ray/common/redis_module/runtest.py
  - python python/ray/plasma/test/test.py
  - python python/ray/local_scheduler/test/test.py
  - python python/ray/global_scheduler/test/test.py

  - python -m pytest test/xray_test.py

  - python test/runtest.py
  - python test/array_test.py
  - python test/actor_test.py
  - python test/autoscaler_test.py
  - python test/tensorflow_test.py
  - python test/failure_test.py
  - python test/microbenchmarks.py
  - python test/stress_tests.py
  - python test/component_failures_test.py
  - python test/multi_node_test.py
  - python test/recursion_test.py
  - python test/monitor_test.py
  - python test/cython_test.py
  - python test/credis_test.py

  # ray dataframe tests
  - python -m pytest python/ray/dataframe/test/test_dataframe.py
  - python -m pytest python/ray/dataframe/test/test_series.py
  - python -m pytest python/ray/dataframe/test/test_concat.py

  # ray tune tests
  - python python/ray/tune/test/dependency_test.py
  - python -m pytest python/ray/tune/test/trial_runner_test.py
  - python -m pytest python/ray/tune/test/trial_scheduler_test.py
  - python -m pytest python/ray/tune/test/tune_server_test.py

  # ray rllib tests
  - python -m pytest python/ray/rllib/test/test_catalog.py
  - python -m pytest python/ray/rllib/test/test_filters.py
  - python -m pytest python/ray/rllib/test/test_optimizers.py
  - python -m pytest python/ray/rllib/test/test_evaluators.py

deploy:
  - provider: s3
    access_key_id: AKIAJ2L7XDUSZVTXI5QA
    secret_access_key:
      secure: MZbzbQvfn9QI2H19Ai0EZju5BERhCMA8/piHU29syvtmoDqd/QdMW0DTHhLAqlaCrGeMGCx0y6sB9DjX46ZKndQ/cgSQDesfNC300NTZZlWyYr7K86yhj+hgIpYXs+G28g1hmQOUzCWL8kAgfeMle9GvKkZ7DkhdRszg8bPyIXdKtjQGO5RRrrjQBgIzjvOiWFOD9lDzula5j8uV4tsiXT8nQjuiOIwmAxB2r7zXHc/Vsr9wBAeQ9Fq6aomEGuuVscoMhZqWc0SHOOz0dIDdlJFF+W4Effw6l9u0Fe262g0WfsnS3PqF7a6eBC0qkf3yH8joAlvquVxWp+dr7dBzy0gGZysD/pqF/NBiB3GZ9TMreK39DJ9zC83p2r0awP1hduhkCJI2QOsNX7fna6e2edVt7rxOEe19So83eDNBbJ6bfV7YbkEMqUJxNHWC6MIDCrCbFf8QlT3fnPsb0IHMa9aJRe/TvgI+aR+nKjRhvVymXddCBAy5hYb/I66omx4BGbl7+9HPo/w/c3m+vCJIu6IQZFVAmsoP6pft9aYVXgkz20C4I/4tF0YlDuH617PT3DeCjf+MG4Mgh9JiXJ2Jt8U6NH1tlXiS/F6OjPGFB7UrFw1o2e0KhX+l/qJEslf5Xc35vmbELf1Fy7QNVttZ2H5OXYrWhsV8EOmpN+KcVQI=
    bucket: ray-wheels
    acl: public_read
    region: us-west-2
    local_dir: .whl
    upload-dir: $TRAVIS_COMMIT
    skip_cleanup: true
    only:
      - master
    on:
      repo: ray-project/ray
      condition: $LINUX_WHEELS = 1 || $MAC_WHEELS = 1
  - provider: s3
    access_key_id: AKIAJ2L7XDUSZVTXI5QA
    secret_access_key:
      secure: MZbzbQvfn9QI2H19Ai0EZju5BERhCMA8/piHU29syvtmoDqd/QdMW0DTHhLAqlaCrGeMGCx0y6sB9DjX46ZKndQ/cgSQDesfNC300NTZZlWyYr7K86yhj+hgIpYXs+G28g1hmQOUzCWL8kAgfeMle9GvKkZ7DkhdRszg8bPyIXdKtjQGO5RRrrjQBgIzjvOiWFOD9lDzula5j8uV4tsiXT8nQjuiOIwmAxB2r7zXHc/Vsr9wBAeQ9Fq6aomEGuuVscoMhZqWc0SHOOz0dIDdlJFF+W4Effw6l9u0Fe262g0WfsnS3PqF7a6eBC0qkf3yH8joAlvquVxWp+dr7dBzy0gGZysD/pqF/NBiB3GZ9TMreK39DJ9zC83p2r0awP1hduhkCJI2QOsNX7fna6e2edVt7rxOEe19So83eDNBbJ6bfV7YbkEMqUJxNHWC6MIDCrCbFf8QlT3fnPsb0IHMa9aJRe/TvgI+aR+nKjRhvVymXddCBAy5hYb/I66omx4BGbl7+9HPo/w/c3m+vCJIu6IQZFVAmsoP6pft9aYVXgkz20C4I/4tF0YlDuH617PT3DeCjf+MG4Mgh9JiXJ2Jt8U6NH1tlXiS/F6OjPGFB7UrFw1o2e0KhX+l/qJEslf5Xc35vmbELf1Fy7QNVttZ2H5OXYrWhsV8EOmpN+KcVQI=
    bucket: ray-wheels
    acl: public_read
    region: us-west-2
    local_dir: .whl
    upload-dir: latest
    skip_cleanup: true
    only:
      - master
    on:
      repo: ray-project/ray
      condition: $LINUX_WHEELS = 1 || $MAC_WHEELS = 1
