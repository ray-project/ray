cartpole-crashing-with-remote-envs-pg:
    env: ray.rllib.examples.env.cartpole_crashing.CartPoleCrashing
    run: PG
    stop:
        episode_reward_mean: 35.0
        timesteps_total: 25000
    config:
        # Works for both torch and tf.
        framework: tf
        env_config:
            config:
                p_crash: 0.0
                # Crash all envs always exactly after n steps.
                crash_after_n_steps: 60
                # Time for the env to initialize when newly created.
                # Every time a remote sub-environment crashes, a new env is created
                # instead that will take this long (sleep) to "initialize".
                init_time_s: 2.0
        num_workers: 4
        num_envs_per_worker: 3
        rollout_fragment_length: 50
        #train_batch_size: 32
        # Use parallel remote envs.
        remote_worker_envs: true
        # Switch on resiliency for failed sub environments (within a vectorized stack).
        restart_failed_sub_environments: true
        # Also ignore worker failures, however, this should not matter as we don't
        # expect any due to catching individual sub-env failures.
        ignore_worker_failures: true
